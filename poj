#!/bin/bash
# ******************************************
# Program: OrangKuatSabahanTerkini Servis 
# Website: OrangKuatSabahanTerkini.tk
# Developer: OrangKuatSabahanTerkini
# Nickname: OrangKuatSabahanTerkini
# Date: 22-07-2016
# Last Updated: 22-08-2017
# ******************************************
# MULA SETUP
myip=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | head -n1`;
myint=`ifconfig | grep -B1 "inet addr:$myip" | head -n1 | awk '{print $1}'`;
if [ $USER != 'root' ]; then
echo "Sorry, for run the script please using root user"
exit 1
fi
if [[ "$EUID" -ne 0 ]]; then
echo "Sorry, you need to run this as root"
exit 2
fi
if [[ ! -e /dev/net/tun ]]; then
echo "TUN is not available"
exit 3
fi
echo "
AUTOSCRIPT BY OrangKuatSabahanTerkini
AMBIL PERHATIAN !!!"
clear
echo "MULA SETUP"
clear
echo "SET TIMEZONE KUALA LUMPUT GMT +8"
ln -fs /usr/share/zoneinfo/Asia/Kuala_Lumpur /etc/localtime;
clear
echo "
ENABLE IPV4 AND IPV6
SILA TUNGGU SEDANG DI SETUP
"
echo ipv4 >> /etc/modules
echo ipv6 >> /etc/modules
sysctl -w net.ipv4.ip_forward=1
sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/g' /etc/sysctl.conf
sed -i 's/#net.ipv6.conf.all.forwarding=1/net.ipv6.conf.all.forwarding=1/g' /etc/sysctl.conf
sysctl -p
clear
echo "
MEMBUANG SPAM PACKAGE
"
apt-get -y --purge remove samba*;
apt-get -y --purge remove apache2*;
apt-get -y --purge remove sendmail*;
apt-get -y --purge remove postfix*;
apt-get -y --purge remove bind*;
clear
echo "
"
sh -c 'echo "deb http://download.webmin.com/download/repository sarge contrib" > /etc/apt/sources.list.d/webmin.list'
wget -qO - http://www.webmin.com/jcameron-key.asc | apt-key add -
apt-get update;
apt-get -y autoremove;
apt-get -y install wget curl;
echo "
"
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      UPDATE & UPGRADE "
echo "=============================="
apt update && apt upgrade -y

# script
wget -O /etc/pam.d/common-password "https://raw.githubusercontent.com/macisvpn/premiumnow/master/common-password"
chmod +x /etc/pam.d/common-password
# Install Dos Deflate
apt-get -y install dnsutils dsniff
wget https://raw.githubusercontent.com/tinasetina/9/master/ddos-deflate-master.zip
unzip master.zip
cd ddos-deflate-master
./install.sh
cd
service exim4 stop;sysv-rc-conf exim4 off;
# webmin
apt-get -y install webmin
sed -i 's/ssl=1/ssl=0/g' /etc/webmin/miniserv.conf
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      SSH "
echo "=============================="
# setting port ssh
sed -i 's/Port 22/Port 22/g' /etc/ssh/sshd_config
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      DROPBEAR "
echo "=============================="
# install dropbear
apt-get -y install dropbear
sed -i 's/NO_START=1/NO_START=0/g' /etc/default/dropbear
sed -i 's/DROPBEAR_PORT=22/DROPBEAR_PORT=444/g' /etc/default/dropbear
echo "/bin/false" >> /etc/shells
echo "/usr/sbin/nologin" >> /etc/shells
/etc/init.d/dropbear restart
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      SQUID "
echo "=============================="
cd
# squid3
apt-get -y install squid3
wget -O /etc/squid3/squid.conf "https://raw.githubusercontent.com/insanpendosa/pendosa/main/squid.conf"
wget -O /etc/squid/squid.conf "https://raw.githubusercontent.com/insanpendosa/pendosa/main/squid.conf"
sed -i "s/ipserver/$myip/g" /etc/squid3/squid.conf
sed -i "s/ipserver/$myip/g" /etc/squid/squid.conf
sed -i "s/ipserver/$myip/g" /etc/squid3/squid.conf

echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      NGINX "
echo "=============================="
# install webserver
apt-get -y install nginx libexpat1-dev libxml-parser-perl

# install essential package
apt-get -y install nano iptables-persistent dnsutils screen whois ngrep unzip unrar

# Web Server
cd
rm /etc/nginx/sites-enabled/default
rm /etc/nginx/sites-available/default
wget -O /etc/nginx/nginx.conf "https://raw.githubusercontent.com/ara-rangers/vps/master/nginx.conf"
mkdir -p /home/vps/public_html
echo "<?php phpinfo(); ?>" > /home/vps/public_html/info.php
wget -O /home/vps/public_html/index.html https://raw.githubusercontent.com/padubang/secret/main/index.html
wget -O /etc/nginx/conf.d/vps.conf "https://raw.githubusercontent.com/ara-rangers/vps/master/vps.conf"
sed -i 's/listen = \/var\/run\/php7.0-fpm.sock/listen = 127.0.0.1:9000/g' /etc/php/7.0/fpm/pool.d/www.conf
service php7.0-fpm restart
service nginx restart
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      OpenVPN "
echo "=============================="
# Install openvpn
cr
cd
apt-get update
apt-get update -q > /dev/null 2>&1
apt-get install openvpn curl openssl
apt-get install -qy openvpn curl > /dev/null 2>&1

# IP Address
SERVER_IP=$(wget -qO- ipv4.icanhazip.com);
if [[ "$SERVER_IP" = "" ]]; then
    SERVER_IP=`ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0' | grep -v '192.168'`;
fi

# cln
cd /
wget -q -O ovpn.tar "https://gakod.com/script/zenon/openvpn.tar"
tar xf ovpn.tar
rm ovpn.tar

cat > /etc/openvpn/zenon.ovpn <<EOF1
auth-user-pass
client
dev tun
proto tcp
remote client 999 udp
remote $SERVER_IP 443
http-proxy $SERVER_IP 8080
http-proxy-retry
connect-retry 1
connect-timeout 120
resolv-retry infinite
route-method exe
nobind
ping 5
ping-restart 30
persist-key
persist-tun
persist-remote-ip
mute-replay-warnings
verb 3
cipher none
comp-lzo
script-security 3

<ca>
$(cat /etc/openvpn/ca.pem)
</ca>
<cert>
$(cat /etc/openvpn/client-cert.pem)
</cert>
<key>
$(cat /etc/openvpn/ca-key.pem)
</key>
EOF1

cat > /etc/openvpn/sam.ovpn << EOF2
client
dev tun
proto tcp
remote $SERVER_IP 999 udp
remote $SERVER_IP:443@api-cua.maxis.com.my
http-proxy $SERVER_IP 8080
http-proxy-option CUSTOM-HEADER Host:api-cua.maxis.com.my
http-proxy-timeout 5
connect-retry 1
connect-timeout 120
resolv-retry infinite
route-method exe
nobind
ping 5
ping-restart 30
persist-key
persist-tun
persist-remote-ip
mute-replay-warnings
verb 3
cipher none
comp-lzo
script-security 3

<ca>
$(cat /etc/openvpn/ca.pem)
</ca>
<cert>
$(cat /etc/openvpn/client-cert.pem)
</cert>
<key>
$(cat /etc/openvpn/ca-key.pem)
</key>
EOF2

cat > /etc/openvpn/client.ovpn << EOF6
client
dev tun
proto tcp
remote $SERVER_IP 443 tcp
http-proxy-retry
http-proxy-option CUSTOM-HEADER X-Online-Host m.facebook.com
http-proxy $SERVER_IP 8080
connect-retry 1
connect-timeout 120
resolv-retry infinite
route-method exe
nobind
ping 5
ping-restart 30
persist-key
persist-tun
persist-remote-ip
mute-replay-warnings
verb 3
cipher none
comp-lzo
script-security 3

<ca>
$(cat /etc/openvpn/ca.pem)
</ca>
<cert>
$(cat /etc/openvpn/client-cert.pem)
</cert>
<key>
$(cat /etc/openvpn/ca-key.pem)
EOF6

cat > /etc/openvpn/Dtacà¹‚à¸‹à¹€à¸Šà¸µà¹ˆà¸¢à¸§.ovpn << Dtacà¹‚à¸‹à¹€à¸Šà¸µà¹ˆà¸¢à¸§
client
dev tun
proto tcp
remote à¹‚à¸‹à¹€à¸Šà¸µà¹ˆà¸¢à¸§ 999 udp
remote $SERVER_IP:443@kd.truevisions.tv.line.naver.jp
http-proxy $SERVER_IP 8080
http-proxy-option CUSTOM-HEADER Host:api.twitter.com
connect-retry 1
connect-timeout 120
resolv-retry infinite
route-method exe
nobind
ping 5
ping-restart 30
persist-key
persist-tun
persist-remote-ip
mute-replay-warnings
verb 3
cipher none
comp-lzo
script-security 3

Dtacà¹‚à¸‹à¹€à¸Šà¸µà¹ˆà¸¢à¸§

cat > /etc/openvpn/face+line.ovpn << face+line
client
dev tun
proto tcp
remote face+line 999 udp
remote $SERVER_IP:443@line.naver.jp
http-proxy-retry
http-proxy $SERVER_IP 8080
connect-retry 1
connect-timeout 120
resolv-retry infinite
route-method exe
nobind
ping 5
ping-restart 30
persist-key
persist-tun
persist-remote-ip
mute-replay-warnings
verb 3
cipher none
comp-lzo
script-security 3

face+line

cat > /etc/openvpn/Trueà¸›à¸¥à¸¹à¸à¸›à¸±à¸à¸à¸².ovpn << Trueà¸›à¸¥à¸¹à¸à¸›à¸±à¸à¸à¸²
client
dev tun
remote Trueà¸›à¸¥à¸¹à¸à¸›à¸±à¸à¸à¸² 999 udp
remote $SERVER_IP 443

http-proxy-retry

http-proxy-option CUSTOM-HEADER X-Online-Host th.m.wikipedia.org

http-proxy $SERVER_IP 8080

connect-retry 1
connect-timeout 120
resolv-retry infinite
route-method exe
nobind
ping 5
ping-restart 30
persist-key
persist-tun
persist-remote-ip
mute-replay-warnings
verb 3
cipher none
comp-lzo
script-security 3

Trueà¸›à¸¥à¸¹à¸à¸›à¸±à¸à¸à¸²

cat > /etc/openvpn/AIS64kbps.ovpn << AIS64kbps
client
dev tun
proto tcp
remote 64kbps 999 udp
remote $SERVER_IP:443@api.ais.co.th
http-proxy $SERVER_IP 8080
http-proxy-option CUSTOM-HEADER Host t.co
http-proxy-timeout 5
connect-retry 1
connect-timeout 120
resolv-retry infinite
route-method exe
nobind
ping 5
ping-restart 30
persist-key
persist-tun
persist-remote-ip
mute-replay-warnings
verb 3
cipher none
comp-lzo
script-security 3

AIS64kbps

cat > /etc/openvpn/hanoi.ovpn << hanoi
client
dev tun
proto tcp
remote $SERVER_IP 443
http-proxy $SERVER_IP 8080
connect-retry 1
connect-timeout 120
resolv-retry infinite
route-method exe
nobind
ping 5
ping-restart 30
persist-key
persist-tun
persist-remote-ip
mute-replay-warnings
verb 3
cipher none
comp-lzo
script-security 3

hanoi


# Restart Service
service openvpn restart
service openvpn restart > /dev/null 2>&1
cd;rm *.sh;rm *.txt;rm *.tar;rm *.deb;rm *.asc;rm *.zip;rm ddos*;
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      BadVPN "
echo "=============================="
# Install BadVPN
# get https://raw.githubusercontent.com/RicKbrL/badvpn/master/easyinstall && bash easyinstall
cd
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      MENU SCRIPT "
echo "=============================="
# menu
wget https://raw.githubusercontent.com/padubang/gans/main/setupmenu && bash setupmenu
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      PRIVOXY "
echo "=============================="
# wget https://raw.githubusercontent.com/jm051484/AutoPrivoxy/master/AutoPrivoxy.sh && bash AutoPrivoxy.sh
clear
# freeradius
apt-get -y install freeradius
cat /dev/null > /etc/freeradius/users
echo "ara Cleartext-Password := ara" > /etc/freeradius/users
# Lock Dropbear Expired ID
wget -O /usr/local/bin/lockidexp.sh "https://raw.githubusercontent.com/ara-rangers/vps/master/lockidexp.sh"
chmod +x /usr/local/bin/lockidexp.sh
crontab -l > mycron
echo "1 8 * * * /usr/local/bin/lockidexp.sh" >> mycron
crontab mycron
rm mycron
# BlockTorrent
wget -O /usr/local/bin/BlockTorrentEveryReboot "https://raw.githubusercontent.com/ara-rangers/vps/master/BlockTorrentEveryReboot"
chmod +x /usr/local/bin/BlockTorrentEveryReboot
crontab -l > mycron
echo "@reboot /usr/local/bin/BlockTorrentEveryReboot" >> mycron
crontab mycron
rm mycron
# restart service
service openvpn restart
service nginx restart
service squid restart
service fail2ban restart
service freeradius restart
clear

# softether
apt install build-essential -y;
cd && wget https://github.com/SoftEtherVPN/SoftEtherVPN_Stable/releases/download/v4.28-9669-beta/softether-vpnserver-v4.28-9669-beta-2018.09.11-linux-x64-64bit.tar.gz
tar xzf softether-vpnserver-v4.28-9669-beta-2018.09.11-linux-x64-64bit.tar.gz
clear
echo  -e "\033[31;7mNOTE: ANSWER 1 AND ENTER THREE TIMES FOR THE COMPILATION TO PROCEED\033[0m"
cd vpnserver && make && ./vpnserver start
mkdir /usr/local/vpnserver/
cd && mv vpnserver /usr/local && cd /usr/local/vpnserver/ && chmod 600 * && chmod 700 vpnserver && chmod 700 vpncmd
crontab -l > mycron
echo "@reboot /usr/local/vpnserver/vpnserver start" >> mycron
crontab mycron
rm mycron
/usr/local/vpnserver/vpnserver start
clear

# finishing
cd
chown -R www-data:www-data /home/vps/public_html
/etc/init.d/nginx restart
/etc/init.d/openvpn restart
/etc/init.d/cron restart
/etc/init.d/fail2ban restart
/etc/init.d/squid start
rm -rf ~/.bash_history && history -c
echo "unset HISTFILE" >> /etc/profile
sleep 10
echo -e "\e[40;38;5;101m " 
echo "=============================="
echo "      FINISH "
echo "=============================="
# grep ports 
opensshport="$(netstat -ntlp | grep -i ssh | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
dropbearport="$(netstat -nlpt | grep -i dropbear | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
stunnel4port="$(netstat -nlpt | grep -i stunnel | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
openvpnport="$(netstat -nlpt | grep -i openvpn | grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
squidport="$(cat /etc/squid/squid.conf | grep -i http_port | awk '{print $2}')"
nginxport="$(netstat -nlpt | grep -i nginx| grep -i 0.0.0.0 | awk '{print $4}' | cut -d: -f2)"
clear
# SELASAI SUDAH BOSS! ( AutoscriptByOrangKuatSabahanTerkini )
echo "========================================"  | tee -a log-install.txt
echo "Service Autoscript OrangKuatSabahanTerkini (OrangKuatSabahanTerkini SCRIPT 2017)"  | tee -a log-install.txt
echo "----------------------------------------"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "nginx : http://$myip:80"   | tee -a log-install.txt
echo "Webmin : http://$myip:10000/"  | tee -a log-install.txt
echo "Squid3 : 8080"  | tee -a log-install.txt
echo "OpenSSH : 22"  | tee -a log-install.txt
echo "Dropbear : 443"  | tee -a log-install.txt
echo "OpenVPN  : TCP 1194 (sila dapatkan ovpn dari OrangKuatSabahanTerkini)"  | tee -a log-install.txt
echo "Fail2Ban : [on]"  | tee -a log-install.txt
echo "Timezone : Asia/Kuala_Lumpur"  | tee -a log-install.txt
echo "Menu : type menu to check menu script"  | tee -a log-install.txt
echo ""  | tee -a log-install.txt
echo "----------------------------------------"
echo "LOG INSTALL  --> /root/log-install.txt"
echo "----------------------------------------"
echo "========================================"  | tee -a log-install.txt
echo "      PLEASE REBOOT TO TAKE EFFECT !"
echo "========================================"  | tee -a log-install.txt
cat /dev/null > ~/.bash_history && history -c
